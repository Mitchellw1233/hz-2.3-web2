<?php

require __DIR__.'/vendor/autoload.php';

use Slimfony\DependencyInjection\ContainerBuilder;
use Slimfony\DependencyInjection\Reference;
use Slimfony\ORM\SchemaManager;

/**
 * @var array<string, array{
 *     args?: array<int, mixed|Reference>,
 *     methods?: array<int, array{method: string, args?: array<int, mixed|Reference>}>
 * }> $services
 */
$services = include __DIR__ . '/config/services.php';

/**
 * @return array<int, class-string> as FQN
 */
$entities = include __DIR__ . '/config/entities.php';

$cb = new ContainerBuilder();
$cb->registerAll($services);

$container = $cb->getContainer();

$accepted = ['fresh', 'generate'];

try {
    if (count($argv) < 1 || !in_array($argv[1], $accepted)) {
        throw new LogicException('Not a valid argument');
    }

    $driver = $container->get(\Slimfony\ORM\Driver::class);
    $sg = new SchemaManager(
        $driver,
        $container->get(\Slimfony\ORM\Resolver\MappingResolver::class),
        $container->get(\Slimfony\Config\ConfigLoader::class),
    );

    $driver->beginTransaction();
    switch ($argv[1]) {
        case 'fresh':
            echo 'deleting database...' . PHP_EOL;
            $sg->delete($entities);
            echo 'generating database...'. PHP_EOL;
            $sg->generate($entities);
            break;
        case 'generate':
            echo 'generating database...' . PHP_EOL;
            $sg->generate($entities);
            break;
    }

    $driver->commit();
    echo 'successful!' . PHP_EOL;
} catch (Throwable $e) {
    echo $e->getMessage();
}
